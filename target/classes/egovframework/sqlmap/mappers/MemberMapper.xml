<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="egovframework.example.dao.MemberDAO">

	<select id="getMemberByMemberId" resultType="egovMap">
		SELECT id,
		regDate,
		updateDate,
		member_name,
		member_id,
		member_pw,
		member_nickname,
		member_email,
		member_phNum,
		DATE_FORMAT(member_birth, '%Y-%m-%d') AS member_birth,
		member_level
		FROM `member`
		WHERE member_id = #{memberId}
	</select>

	<select id="getMemberByMemberNames" resultType="egovMap">
		SELECT id,
		regDate,
		updateDate,
		member_name,
		member_id,
		member_pw,
		DATE_FORMAT(member_birth, '%Y-%m-%d') AS member_birth,
		member_nickname,
		member_email,
		member_phNum,
		member_level
		FROM `member`
		WHERE member_name = #{member_name}
	</select>
	
	<select id="getMemberByMemberName" resultType="egovMap" parameterType="String">
		SELECT id,
		regDate,
		updateDate,
		member_name,
		member_id,
		member_pw,
		DATE_FORMAT(member_birth, '%Y-%m-%d') AS member_birth,
		member_nickname,
		member_email,
		member_phNum,
		member_level
		FROM `member`
		WHERE member_name = #{member_name}
	</select>
	
	<select id="getMemberByMemberNameAndEmail" resultType="egovMap">
		SELECT id,
		regDate,
		updateDate,
		member_name,
		member_id,
		member_pw,
		DATE_FORMAT(member_birth, '%Y-%m-%d') AS member_birth,
		member_nickname,
		member_email,
		member_phNum,
		member_level
		FROM `member`
		WHERE member_name = #{memberName}
		AND member_email = #{memberEmail}
	</select>
	
	<select id="getMemberByIdAndEmailAndBirth" resultType="egovMap">
		SELECT id,
		regDate,
		updateDate,
		member_name,
		member_id,
		member_pw,
		DATE_FORMAT(member_birth, '%Y-%m-%d') AS member_birth,
		member_nickname,
		member_email,
		member_phNum,
		member_level
		FROM `member`
		WHERE member_id = TRIM(#{memberId})
		AND member_email = #{memberEmail}
		AND member_birth = DATE_FORMAT(#{memberBirth},'%Y-%m-%d')
	</select>
	
	<select id="getMemberByMemberNickname" resultType="egovMap">
		SELECT id,
		regDate,
		updateDate,
		member_name,
		member_id,
		member_pw,
		DATE_FORMAT(member_birth, '%Y-%m-%d') AS member_birth,
		member_nickname,
		member_email,
		member_phNum,
		member_level
		FROM `member`
		WHERE member_nickname = #{member_nickname}
	</select>
	
	<select id="getMemberByMemberEmailCount" resultType="int">
		SELECT COUNT(*)
		FROM `member`
		WHERE member_email = #{member_name}
	</select>
	
	<insert id="doJoin" useGeneratedKeys="true" keyProperty="id" parameterType="map">
		INSERT INTO `member`
		<set>
			regDate = NOW(),
			updateDate = NOW(),
			member_name = #{memberName},
			member_id = #{memberId},
			member_pw = #{memberPw},
			member_birth = #{memberBirth},
			member_postcode = #{memberPostCode},
			member_address = #{memberAddress},
			member_email = #{memberEmail},
			member_phNum = #{memberPhoneNumber},
			mail_agree = #{smsAgree},
			email_agree = #{emailAgree},
			<if test="member_level != null">
				member_level = #{memberLevel},
			</if>
		</set>
	</insert>
	
	<select id="doLoginCheck" resultType="member">
		SELECT id,
		regDate,
		updateDate,
		member_name,
		member_id,
		member_pw,
		DATE_FORMAT(member_birth, '%Y-%m-%d') AS member_birth,
		member_birth,
		member_nickname,
		member_email,
		member_phNum,
		member_level
		FROM `member`
		WHERE member_id = #{memberId}
	</select>
	
	<select id="getMemberById" resultType="egovMap" parameterType="int">
		SELECT id,
		regDate,
		updateDate,
		member_name,
		member_id,
		DATE_FORMAT(member_birth, '%Y-%m-%d') AS member_birth,
		member_birth,
		member_nickname,
		member_email,
		member_phNum,
		member_level
		FROM `member`
		WHERE id = #{changeMemberId}
	</select>
	
</mapper>