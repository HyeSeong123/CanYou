<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans.xsd
             http://www.springframework.org/schema/security
             http://www.springframework.org/schema/security/spring-security.xsd">

	<http auto-config="true" use-expressions="true">
		<csrf disabled="true"/>
		
		<intercept-url pattern="/resources/**" access="permitAll" />
		<intercept-url pattern="/login/**" access="isAnonymous()" />
		<intercept-url pattern="/css/**" access="permitAll" />
		<intercept-url pattern="/js/**" access="permitAll" />
		<intercept-url pattern="/index.do" access="permitAll" />
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/member/doJoin.do" access="isAnonymous()"/>
		<intercept-url pattern="/member/join.do" access="isAnonymous()" />
		
		<intercept-url pattern="/**"
			access="hasRole('ROLE_USER')" />
		
		<form-login login-page="/login/loginPage.do"
			login-processing-url="/login.do"
			authentication-failure-url="/login/loginPage.do?err=true"
			authentication-success-forward-url="/index.do"
			default-target-url="/" username-parameter="userid"
			password-parameter="userpw" />
		
		<logout
			logout-url="/logoutAsk"
			logout-success-url="/"
			invalidate-session="true"
			delete-cookies="true"
		/>
		<session-management>
			<concurrency-control max-sessions="1" expired-url="/" />
		</session-management>

		<access-denied-handler error-page="/login/accessDenine.do" />
		 
	</http>
	
	
	<authentication-manager>

		<authentication-provider>
			<!-- <user-service> <user name="admin" password="admin" authorities="ROLE_ADMIN"/> 
				<user name="user" password="user" authorities="ROLE_USER"/> </user-service> -->
			<jdbc-user-service data-source-ref="mysql"
				users-by-username-query="SELECT id,
											member_id AS userid,
											member_pw AS userpw,
											member_level
											FROM `member`
											WHERE member_id = ?"
				authorities-by-username-query="SELECT member_id AS userid,
												CASE
													WHEN (member_level BETWEEN 1 AND 5) THEN 'ROLE_USER'
													WHEN (member_level BETWEEN 9 AND 10) THEN 'ROLE_ADMIN'
													ELSE 'ROLE_GUEST'
													END AS authority
													FROM `member`
													WHERE member_id = ?
												" />
				
		</authentication-provider>
		
	</authentication-manager>

</beans:beans>